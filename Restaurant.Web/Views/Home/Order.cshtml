@model  BusinessObjects.OrderBO

@{
    ViewBag.Title = "Order";
}

<script type="text/javascript" language="jscript">
    $(document).ready(function () {
        var restuarantID = $('#Resturants').val();
        GetMenuItems(restuarantID);
        GetDiningTableLocations(restuarantID);
        $('#MenuItems').change(function () {
            var itemID = $('#MenuItems').val();
            GetItemPrice(itemID);
        });
        $('#itemQuantity').change(function () {
            CalculateTotal();
        });
        $('#Resturants').change(function () {
            var restuarantID = $('#Resturants').val();
            GetMenuItems(restuarantID);
            GetDiningTableLocations(restuarantID);
        });
        $('#DiningTable').change(function () {
            var diningTableID = $('#DiningTable').val();
            GetDiningTableStatus(diningTableID);
        });
        $('#save').click(function () {
            finalSubmit();
        });
    });
    function GetDiningTableStatus(diningTableID) {
        $.ajax({
            async: true,
            type: 'GET',
            datatype: 'JSON',
            contentType: 'application/json;charsetutf-8',
            data: { diningTableID: diningTableID },
            url: '/home/GetDiningTableStatus',
            success: function (data) {
                if (data == 'Occupied') {
                    alert('Dining table is already Occupied.');
                }
            },
            error: function () {
                alert('There is some problem to get Dining Table Status');
            }


        });
    }
    function finalSubmit() {
     
        var RestaurantID = $('#Resturants').val();
        var MenuItemID = $('#MenuItems').val();
        var DiningTableID = $('#DiningTable').val();
        $('#txtResturantID').val(RestaurantID);
        $('#txtMenuItemID').val(MenuItemID);
        $('#txtDiningTableID').val(DiningTableID);
    }

    function CalculateTotal() {
        var itemPrice = $("#itemPrice").val();
        var quantity = $("#itemQuantity").val();
        var total = itemPrice * quantity;
        $("#orderAmount").val(parseFloat(total).toFixed(2));

    }

    function GetItemPrice(itemID) {
        $.ajax({
            async: true,
            type: 'GET',
            datatype: 'JSON',
            contentType: 'application/json;charsetutf-8',
            data: { itemID: itemID },
            url: '/home/GetMenuItemPrice',
            success: function (data) {
                $("#itemPrice").val(parseFloat(data).toFixed(2));
            },
            error: function () {
                alert('There is some problem to get menu item price');
            }


        });
    }
    function GetMenuItems(restaurantID) {
        $.ajax({
            type: "post",
            url: "/home/GetMenuItems",
            data: { restaurantID: restaurantID },
            datatype: "json",
            traditional: true,
            success: function (data) {
                var menuItems = "<select id='MenuItems'>";
                menuItems = menuItems + '<option value="">--Select--</option>';
                for (var i = 0; i < data.length; i++) {
                    menuItems = menuItems + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                }
                menuItems = menuItems + '</select>';
                $('#MenuItems').html(menuItems);
            },
            error: function () {
                alert('There is some problem to get menu items' + restaurantID);
            }


        });
    }
    function GetDiningTableLocations(restaurantID) {
        $.ajax({
            type: "post",
            url: "/home/GetDiningTableLocations",
            data: { restaurantID: restaurantID },
            datatype: "json",
            traditional: true,
            success: function (data) {
                var diningTable = "<select id='DiningTable'>";
                diningTable = diningTable + '<option value="">--Select--</option>';
                for (var i = 0; i < data.length; i++) {
                    diningTable = diningTable + '<option value=' + data[i].Value + '>' + data[i].Text + '</option>';
                }
                diningTable = diningTable + '</select>';
                $('#DiningTable').html(diningTable);
            },
            error: function () {
                alert('There is some problem to get Dining Table Locations ' + restaurantID);
            }


        });
    }
</script>

@using (Html.BeginForm("Order", "Home", FormMethod.Post))
{
    <div class="container mt-5">

        <div class="p-2 pt-md-4 pb-md-3 mx-auto text-center">
            <h1 class="display-4">Order Details</h1>
        </div>
        <div class="col-md-8 offset-2">
            <div class="row">
                <div class="col-md-6 mb-3 form-group">
                    @Html.LabelFor(Model => Model.OrderDate, new { @class = "control-label" })
                    @Html.TextBoxFor(Model => Model.OrderDate, new { @id = "Date", @value = DateTime.Now.ToShortDateString(), @type = "date", @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model.OrderDate, null, new { @class = "text-danger" })
                </div>

                <div class="col-md-6 mb-3 form-group">
                    @Html.LabelFor(Model => Model.RestaurantID, new { @class = "control-label" })
                    @Html.TextBoxFor(Model => Model.RestaurantID, new { @type="hidden" ,id="txtResturantID"})
                    @Html.DropDownList("Resturants", Model.RestaurantNames, new { @class = "form-control" })
                    @Html.ValidationMessageFor(Model => Model.RestaurantNames, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="mb-3">
                <div class="row">
                    <div class="col-md-6 form-group">
                        @Html.LabelFor(Model => Model.MenuItemNames, new { @class = "control-label" })
                        @Html.TextBoxFor(Model => Model.MenuItemID, new { @type = "hidden", id = "txtMenuItemID" })
                        @Html.DropDownList("MenuItems", Model.MenuItemNames, new { @class = "form-control" })
                        @Html.ValidationMessageFor(Model => Model.MenuItemNames, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-6 form-group">
                        @Html.LabelFor(Model => Model.DiningTableLocations, new { @class = "control-label" })
                        @Html.TextBoxFor(Model => Model.DiningTableID, new { @type = "hidden", id = "txtDiningTableID" })
                        @Html.DropDownList("DiningTable", Model.DiningTableLocations, new { @class = "form-control" })
                        @Html.ValidationMessageFor(Model => Model.DiningTableLocations, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="mb-3">
                <div class="row">
                    <div class="col-md-4 form-group">
                        @Html.LabelFor(Model => Model.ItemQuantiy, new { @class = "control-label" })
                        @Html.TextBoxFor(Model => Model.ItemQuantiy, new { @class = "form-control" ,@id="itemQuantity"})
                        @Html.ValidationMessageFor(Model => Model.ItemQuantiy, null, new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4 form-group">
                        <label for="itemPrice">Item Price</label>
                        <input type="text" class="form-control" id="itemPrice" placeholder="Price" readonly>
                    </div>
                    <div class="col-md-4 form-group">
                        @Html.LabelFor(Model => Model.OrderAmount, new { @class = "control-label" })
                        @Html.TextBoxFor(Model => Model.OrderAmount, new { @class = "form-control", @readonly = "readonly",@id="orderAmount" })
                        @Html.ValidationMessageFor(Model => Model.OrderAmount, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <button class="btn btn-success btn-lg btn-block mb-4" type="submit" value="save" name="save" id="save">
                order
                now!
            </button>


        </div>
    </div>
}
